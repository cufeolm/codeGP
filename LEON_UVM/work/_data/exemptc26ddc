package config__mti__sv__equiv__implct__pack;

    localparam logic [3:0] impl = '{1'b0, 1'b0, 1'b0, 1'b0};

    localparam logic [3:0] ver = '{1'b0, 1'b0, 1'b0, 1'b0};

    localparam logic [2:0] fpuver = '{1'b0, 1'b0, 1'b0};

    localparam logic [2:0] cpver = '{1'b0, 1'b0, 1'b0};

    localparam leon_version = "2.4.0";

    localparam bit debugport = 1'b1;

    localparam bit debuguart = 1'b0;

    localparam bit debugiurf = 1'b0;

    localparam bit debugfpu = 1'b0;

    localparam bit nohalt = 1'b0;

    typedef int signed log2arr [1:33];

    localparam log2arr log2 = '{0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6};

    localparam log2arr log2x = '{1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6};

    localparam int signed pclow = 2;

    localparam bit gatedclk = 1'b0;

    localparam int signed rfimptype = 1;

    localparam target__mti__sv__equiv__implct__pack::targettechs target_tech = target__mti__sv__equiv__implct__pack::\gen ;

    localparam bit infer_ram = 1'b1;

    localparam bit infer_regf = 1'b1;

    localparam bit infer_rom = 1'b1;

    localparam bit infer_pads = 1'b1;

    localparam bit infer_mult = 1'b1;

    localparam bit unsigned [0:5] nwindows = 8;

    localparam bit unsigned [0:2] nwinlog2 = 3;

    localparam int signed rabits = 8;

    localparam int signed rdbits = 32;

    localparam target__mti__sv__equiv__implct__pack::multypes multiplier = target__mti__sv__equiv__implct__pack::\none ;

    localparam target__mti__sv__equiv__implct__pack::divtypes divider = target__mti__sv__equiv__implct__pack::\none ;

    localparam bit macen = 1'b0;

    localparam bit fpen = 1'b0;

    localparam target__mti__sv__equiv__implct__pack::fputype fptype = target__mti__sv__equiv__implct__pack::\none ;

    localparam int signed fpreg = 0;

    localparam bit cpen = 1'b0;

    localparam bit cwpopt = 1'b1;

    localparam int signed iregnum = 136;

    localparam bit unsigned [0:3] iline_size = 4;

    localparam int signed iline_bits = 2;

    localparam int signed ioffset_bits = 7;

    localparam int signed itag_high = 31;

    localparam int signed itag_bits = 25;

    localparam bit unsigned [0:3] dline_size = 4;

    localparam int signed dline_bits = 2;

    localparam int signed doffset_bits = 7;

    localparam int signed dtag_high = 31;

    localparam int signed dtag_bits = 25;

    localparam bit bus8en = 1'b1;

    localparam bit bus16en = 1'b1;

    localparam bit rawaddr = 1'b0;

    localparam target__mti__sv__equiv__implct__pack::boottype bootopt = target__mti__sv__equiv__implct__pack::\memory ;

    localparam int signed itpresc = 0;

    localparam logic [15:0] tpresc = '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0};

    localparam int signed iupresc = 6;

    localparam logic [15:0] upresc = '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b0};

    localparam logic [3:0] bramrws = '{1'b0, 1'b0, 1'b0, 1'b0};

    localparam logic [3:0] bramwws = '{1'b0, 1'b0, 1'b0, 1'b0};

    localparam bit extbaud = 1'b0;

    localparam int signed pabits = 8;

    localparam bit pcien = 1'b0;

    localparam target__mti__sv__equiv__implct__pack::pcitype pcicore = target__mti__sv__equiv__implct__pack::\none ;

    localparam bit pcipmeen = 1'b0;

    localparam bit pci66paden = 1'b0;

    localparam bit wproten = 1'b0;

    localparam bit ahbstaten = 1'b0;

    localparam bit cfgreg = 1'b1;

    localparam bit wdogen = 1'b0;

    localparam bit irq2en = 1'b0;

    localparam bit unsigned [0:5] irq2chan = 32;

    localparam target__mti__sv__equiv__implct__pack::irq_filter_type irq2tbl [0:31] = '{target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 , target__mti__sv__equiv__implct__pack::\lvl0 };

    localparam bit fastjump = 1'b1;

    localparam bit icc_hold = 1'b1;

    localparam bit unsigned [0:1] lddelay = 1;

    localparam bit fastdecode = 1'b1;

    localparam bit unsigned [0:2] watchpoints = 0;

    localparam int signed ahb_masters = 1;

    localparam target__mti__sv__equiv__implct__pack::apb_slv_config_type apb_table [0:15] = '{'{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0}, 0, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0}, 1, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b1, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b0, 1'b0, 1'b0}, 2, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b1, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, 3, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0}, 4, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b0, 1'b1, 1'b1, 1'b0, 1'b0}, 5, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b0, 1'b0}, 6, 1'b1}, '{'{1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b1, 1'b1, 1'b0, 1'b0}, 7, 1'b1}, '{'{1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b1, 1'b1, 1'b1, 1'b0, 1'b0}, 8, 1'b1}, '{'{1'b0, 1'b0, 1'b1, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b1, 1'b0, 1'b1, 1'b0, 1'b1, 1'b1, 1'b0, 1'b0}, 9, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0}};

    localparam target__mti__sv__equiv__implct__pack::ahb_slv_config_type ahb_slvtable [0:6] = '{'{'{1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b1, 1'b1, 1'b1}, 0, 1'b0, 1'b1}, '{'{1'b1, 1'b0, 1'b0, 1'b0}, '{1'b1, 1'b0, 1'b0, 1'b0}, 1, 1'b0, 1'b1}, '{'{1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0, 1'b0}, '{'{1'b0, 1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0, 1'b0}, 0, 1'b0, 1'b0}};

    localparam bit ahb_split = 1'b0;

    localparam int signed ahb_defmst = 0;

    localparam target__mti__sv__equiv__implct__pack::ahb_cache_config_type ahb_cachetable [0:3] = '{'{'{1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0}}, '{'{1'b0, 1'b1, 1'b0}, '{1'b0, 1'b1, 1'b1}}, '{'{1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0}}, '{'{1'b0, 1'b0, 1'b0}, '{1'b0, 1'b0, 1'b0}}};

    localparam bit pciarben = 1'b0;

    localparam bit unsigned [0:5] nb_agents = 4;

    localparam bit unsigned [0:2] arb_levels = 4;

    localparam bit apb_prios = 1'b1;

    localparam bit unsigned [0:2] arb_size = 2;

endpackage
